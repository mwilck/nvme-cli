'\" t
.\"     Title: nvme-monitor
.\"    Author: [FIXME: author] [see http://www.docbook.org/tdg5/en/html/author]
.\" Generator: DocBook XSL Stylesheets vsnapshot <http://docbook.sf.net/>
.\"      Date: 01/20/2021
.\"    Manual: NVMe Manual
.\"    Source: NVMe
.\"  Language: English
.\"
.TH "NVME\-MONITOR" "1" "01/20/2021" "NVMe" "NVMe Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
nvme-monitor \- Monitor Discovery events and Discover and Connect automatically
.SH "SYNOPSIS"
.sp
.nf
\fInvme discover\fR
                [\-\-autoconnect            | \-A
                [\-\-startup                | \-U
                [\-\-persistent             | \-p
                [\-\-hostnqn=<hostnqn>      | \-q <hostnqn>]
                [\-\-hostid=<hostid>        | \-I <hostid>]
                [\-\-keep\-alive\-tmo=<#>     | \-k <#>]
                [\-\-reconnect\-delay=<#>    | \-c <#>]
                [\-\-ctrl\-loss\-tmo=<#>      | \-l <#>]
                [\-\-hdr\-digest             | \-g]
                [\-\-data\-digest            | \-G]
                [\-\-nr\-io\-queues=<#>       | \-i <#>]
                [\-\-nr\-write\-queues=<#>    | \-W <#>]
                [\-\-nr\-poll\-queues=<#>     | \-P <#>]
                [\-\-queue\-size=<#>         | \-Q <#>]
                [\-\-matching               | \-m]
                [\-\-persistent             | \-p]
                [\-\-silent                 | \-S]
                [\-\-verbose                | \-v]
                [\-\-debug                  | \-D]
                [\-\-clockstamps            | \-C]
.fi
.SH "DESCRIPTION"
.sp
Listen to Discovery events (Asynchronous Event Notifications, AENs) on NVMe\-over\-Fabrics (NVMeoF) Discovery Controllers and for other events related to NVMeoF Discovery, and optionally connect to newly discovered controllers\&.
.sp
If no parameters are given, then \fInvme monitor\fR listens to Discovery\-related udev events (uevents)\&. If an event is received, it connects to the Discovery Controller and performs the equivalent of an \fInvme discover\fR on the associated transport address\&. If the \fI\-\-autoconnect\fR option is given, it performs the equivalent of an \fInvme connect\-all\fR instead\&. When run through a systemd service in \fI\-\-autoconnect\fR mode, the monitor can be used as an alternative to the udev\-rule based auto\-activation of NVMeoF connections\&.
.sp
Currently, the following event types are supported:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"Discovery Log Page Change" Asynchronous Event Notifications (AENs) delivered via persistent connections to NVMeoF discovery controllers connected to the discovery service (nqn\&.2014\-08\&.org\&.nvmexpress\&.discovery)\&. Note that without the
\fI\-\-persistent\fR
option,
\fInvme monitor\fR
will not create persistent Discovery controllers itself, but it will receive and act upon AENs sent from persistent Discovery Controllers which were created manually or by other programs\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
FC\-NVMe auto\-connect uevents sent when the FibreChannel transport discovers N_Ports offering NVMe services\&.
.RE
.sp
See the documentation for the nvme\-connect\-all(1) and nvme\-discover(1) commands for further background\&.
.SH "OPTIONS"
.PP
\-A, \-\-autoconnect
.RS 4
If this option is given,
\fInvme monitor\fR
will attempt to connect to newly discovered controllers\&. In order to avoid race conditions with
\fInvme connect\-all\fR
commands spawned by udev rules via systemd\(cqs
nvmf\-connect@\&.service, an empty rule is created under
/run/udev/rules\&.d/70\-nvmf\-autoconnect\&.rules, disabling the udev rules that start this service\&. The file will be deleted when
\fInvme monitor\fR
terminates\&.
.RE
.PP
\-U, \-\-startup
.RS 4
Look for existing NVMe connections (i\&.e\&. transport addresses with at least one connected controller) during startup, start a discovery controller on every detected connection, retrieve the log page and (if
\fI\-\-autoconnect\fR
is also given) connect to all discovered controllers\&. Use the
\fI\-\-persistent\fR
option to make the Discovery Controllers persist after retrieving the Discovery Log page\&.
.RE
.PP
\-p, \-\-persistent
.RS 4
This option has the same meaning as for
\fInvme discover\fR; Discovery Controllers will remain after the Discovery Log Page has been retrieved\&. This is necessary for receiving AENs from the transport connection that the Discovery controller is associated with\&. Without this option, AENs can only be received and acted upon if the administrator manually creates persistent Discovery controller connections\&. When
\fInvme monitor\fR
terminates, it will attempt to take down all Discovery Controllers it has created (i\&.e\&. ones that didn\(cqt already exist when
\fInvme monitor\fR
was started\&.
.RE
.PP
\-q <hostnqn>, \-\-hostnqn=<hostnqn>, \-I <hostid>, \-\-hostid=<hostid>, \-k <#>, \-\-keep\-alive\-tmo=<#>, \-c <#>, \-\-reconnect\-delay=<#>, \-l <#>, \-\-ctrl\-loss\-tmo=<#>, \-g, \-\-hdr\-digest, \-G, \-\-data\-digest, \-i <#>, \-\-nr\-io\-queues=<#>, \-W <#>, \-\-nr\-write\-queues=<#>, \-P <#>, \-\-nr\-poll\-queues=<#>, \-Q <#>, \-\-queue\-size=<#>, \-m, \-\-matching
.RS 4
These options have the same meaning as for
\fInvme connect\-all\fR\&. See the man page nvme\-connect\-all(1) for details\&.
.RE
.PP
\-p, \-\-persistent
.RS 4
Don\(cqt remove the discovery controller after retrieving the discovery log page\&.
.RE
.PP
\-S, \-\-silent
.RS 4
Only print warnings and severe error messages\&. Do not log discoveries and newly created controllers\&.
.RE
.PP
\-v, \-\-verbose
.RS 4
Log informational messages\&. This option overrides
\fI\-\-silent\fR\&.
.RE
.PP
\-D, \-\-debug
.RS 4
Log informational and debug messages\&. This option overrieds
\fI\-\-silent\fR
and
\fI\-\-verbose\fR\&.
.RE
.SH "EXAMPLES"
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Listen to FC\-NVME events and AENs, creating persistent Discovery Controllers on the way, and automatically connect to all discovered controllers:
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme discover \-\-autoconnect \-\-persistent
.fi
.if n \{\
.RE
.\}
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
Like the above, but print more log messages and try to set up Discovery Controllers on startup, and using a different host NQN:
.sp
.if n \{\
.RS 4
.\}
.nf
# nvme discover \-\-autoconnect \-\-persistent \-\-startup \-\-verbose \e
\-\-hostqn=host1\-rogue\-nqn
.fi
.if n \{\
.RE
.\}
.RE
.SH "SEE ALSO"
.sp
nvme\-discover(1) nvme\-connect\-all(1)
.SH "NVME"
.sp
Part of the nvme\-user suite
